/Maximo comun divisor
object Helloworld{
	def main(args: Array[String]){
		var n : BigInt = 135;
		var m : BigInt = 90;
		var x : BigInt = 0;
		
		while(m > 0)
		{
			x = m;
			m = n%m;
			n = x;
		}
		
		println(n); //Salida iterativa
		printlnMcd(135,90)); //Salida tail recursion	
	}
	def Mcd(a : Int, b : Int) : Int =
	{
		if(b == 0)
		{
			return a;
		}
		return Mcd(b, a%b);
	}
}
//Factorial de n
object Helloworld{
	def main(args: Array[String]){
		var n : BigInt = 10000;
		var m : BigInt = 1;
		
		while(n > 0)
		{
			m = n * m;
			n = n - 1;			
		}
		
		println(m); //Salida iterativa
		printlnFactorial(10000,1)); //Salida tail recursion	
		printlnFactorialR(10000)); //Salida recursividad
	}
	def Factorial(n : BigInt, a : BigInt) : Int =
	{
		if(n == 0)
		{
			return a;
		}
		return Mcd(n - 1, n * a);
	}
	def FactorialR(n : BigInt) : Int =
	{
		if(n == 0)
		{
			return n;
		}
		m = n * FactorialR(n - 1);
		return m;
	}
}
//Suma desde 1 hasta n
object Helloworld{
	def main(args: Array[String]){
		var n : BigInt = 10000;
		var m : BigInt = 1;
		
		while(n > 0)
		{
			m = n + m;
			n = n - 1;			
		}
		
		println(m); //Salida iterativa
		printlnFactorial(10000,1)); //Salida tail recursion	
		printlnFactorialR(10000)); //Salida recursividad
	}
	def Factorial(n : BigInt, a : BigInt) : Int =
	{
		if(n == 0)
		{
			return a;
		}
		return Mcd(n - 1, n + a);
	}
	def FactorialR(n : BigInt) : Int =
	{
		if(n == 0)
		{
			return n;
		}
		m = n + FactorialR(n - 1);
		return m;
	}
}

